/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy.management.system;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.sql.Time;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static pharmacy.management.system.DBProvider.add;
import static pharmacy.management.system.DBProvider.check;
import static pharmacy.management.system.DBProvider.closeConnect;
import static pharmacy.management.system.DBProvider.dataTable;
import static pharmacy.management.system.DBProvider.excuteAdd;
import static pharmacy.management.system.DBProvider.excuteCheck;
import static pharmacy.management.system.DBProvider.excuteGet;
import static pharmacy.management.system.DBProvider.excuteSQL;
import static pharmacy.management.system.DBProvider.excuteUpdate_Delete;
import static pharmacy.management.system.DBProvider.get;
import static pharmacy.management.system.DBProvider.getConnect;
import static pharmacy.management.system.DBProvider.insertID;
import static pharmacy.management.system.DBProvider.rs;
import static pharmacy.management.system.DBProvider.rs1;
import static pharmacy.management.system.DBProvider.rs2;

/**
 *
 * @author HOANG
 */
public class StartScreenUser extends javax.swing.JFrame {

    /**
     * Creates new form StartScreenUser
     */
    public StartScreenUser() {
        initComponents();
        SelectMed();
        SelectCus();
        SelectMan();
        //SelectBill();
        SelectTbGetBill();
        cbxCpndata();
        jdateCurrentMedi();
        jdateCurrentCus();
        //txtDateReport.disable();
//        jdateCurrentReport();
        txtMedID.disable();
        txtCusID.disable();
        txtManuID.disable();
        txtBillID.disable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpPharma = new javax.swing.JTabbedPane();
        pnlCustomer = new javax.swing.JPanel();
        headingCus = new javax.swing.JLabel();
        pnlButtonCus = new javax.swing.JPanel();
        btnAddCus = new javax.swing.JButton();
        btnUpdateCus = new javax.swing.JButton();
        btnDeleteCus = new javax.swing.JButton();
        btnClearCus = new javax.swing.JButton();
        pnlCusInfo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtCusID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCusName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCusAdd = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCusPhone = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        dateCusBirth = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCus = new javax.swing.JTable();
        pnlMedicine = new javax.swing.JPanel();
        headingCus1 = new javax.swing.JLabel();
        pnlButtonMed = new javax.swing.JPanel();
        btnAddMed = new javax.swing.JButton();
        btnUpdateMed = new javax.swing.JButton();
        btnDeleteMed = new javax.swing.JButton();
        btnClearMed = new javax.swing.JButton();
        pnlInforMed = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMedID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMedName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMedUnit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dateExp = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        cbxCompany = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtMedInventory = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMedi = new javax.swing.JTable();
        pnlManufactor = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        pnlManuInfo = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtManuID = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtManuName = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtManuAdd = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtManuPhone = new javax.swing.JTextField();
        pnlButtonManu = new javax.swing.JPanel();
        btnAddManu = new javax.swing.JButton();
        btnUpdateManu = new javax.swing.JButton();
        btnDeleteManu = new javax.swing.JButton();
        btnClearManu = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbManu = new javax.swing.JTable();
        pnlBill = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        pnlReportInfo = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        txtBillID = new javax.swing.JTextField();
        pnlButtonReport = new javax.swing.JPanel();
        btnAddBill = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbBill = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbgetBill = new javax.swing.JTable();
        mbPharma = new javax.swing.JMenuBar();
        mSystem = new javax.swing.JMenu();
        btnSignOut = new javax.swing.JMenuItem();
        btnExit = new javax.swing.JMenuItem();
        mUser = new javax.swing.JMenu();
        btnUserInfo = new javax.swing.JMenuItem();
        btnChangePassword = new javax.swing.JMenuItem();
        mStatistics = new javax.swing.JMenu();
        mAbout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pharmacy Management System");
        setResizable(false);

        tpPharma.setBackground(new java.awt.Color(255, 255, 255));
        tpPharma.setFocusable(false);
        tpPharma.setName(""); // NOI18N

        pnlCustomer.setBackground(new java.awt.Color(255, 255, 255));

        headingCus.setBackground(new java.awt.Color(102, 102, 0));
        headingCus.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        headingCus.setForeground(new java.awt.Color(0, 153, 102));
        headingCus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingCus.setText("MANAGE CUSTOMER");

        pnlButtonCus.setBackground(new java.awt.Color(255, 255, 255));

        btnAddCus.setText("Add");
        btnAddCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnAddCus);

        btnUpdateCus.setText("Update");
        btnUpdateCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnUpdateCus);

        btnDeleteCus.setText("Delete");
        btnDeleteCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnDeleteCus);

        btnClearCus.setText("Reset");
        btnClearCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnClearCus);

        pnlCusInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Customer ID:");

        jLabel11.setText("Name:");

        jLabel12.setText("Address:");

        jLabel13.setText("Phone:");

        txtCusPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCusPhoneActionPerformed(evt);
            }
        });
        txtCusPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCusPhoneKeyTyped(evt);
            }
        });

        jLabel14.setText("Birthday:");

        dateCusBirth.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout pnlCusInfoLayout = new javax.swing.GroupLayout(pnlCusInfo);
        pnlCusInfo.setLayout(pnlCusInfoLayout);
        pnlCusInfoLayout.setHorizontalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateCusBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCusPhone))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCusAdd))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCusName)
                            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                                .addComponent(txtCusID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCusInfoLayout.setVerticalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCusAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtCusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(dateCusBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        tbCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbCusMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tbCus);

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headingCus, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlButtonCus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingCus, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCustomerLayout.createSequentialGroup()
                        .addComponent(pnlCusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonCus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tpPharma.addTab("Customer", pnlCustomer);

        pnlMedicine.setBackground(new java.awt.Color(255, 255, 255));

        headingCus1.setBackground(new java.awt.Color(102, 102, 0));
        headingCus1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        headingCus1.setForeground(new java.awt.Color(0, 153, 102));
        headingCus1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingCus1.setText("MANAGE MEDICINE");

        pnlButtonMed.setBackground(new java.awt.Color(255, 255, 255));

        btnAddMed.setText("Add");
        btnAddMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnAddMed);

        btnUpdateMed.setText("Update");
        btnUpdateMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnUpdateMed);

        btnDeleteMed.setText("Delete");
        btnDeleteMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnDeleteMed);

        btnClearMed.setText("Reset");
        btnClearMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnClearMed);

        pnlInforMed.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Medicine ID:");

        txtMedID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedIDKeyTyped(evt);
            }
        });

        jLabel2.setText("Name:");

        jLabel3.setText("Unit Price:");

        txtMedUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedUnitKeyTyped(evt);
            }
        });

        jLabel7.setText("Exp:");

        dateExp.setDateFormatString("yyyy-MM-dd");

        jLabel8.setText("Company:");

        jLabel4.setText("Inventory:");

        txtMedInventory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedInventoryKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlInforMedLayout = new javax.swing.GroupLayout(pnlInforMed);
        pnlInforMed.setLayout(pnlInforMedLayout);
        pnlInforMedLayout.setHorizontalGroup(
            pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInforMedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlInforMedLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMedInventory))
                            .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlInforMedLayout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtMedUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlInforMedLayout.createSequentialGroup()
                                    .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMedName, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                                        .addComponent(txtMedID)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlInforMedLayout.setVerticalGroup(
            pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInforMedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMedID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMedName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMedUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMedInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(dateExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbxCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        tbMedi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMedi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMediMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMedi);

        javax.swing.GroupLayout pnlMedicineLayout = new javax.swing.GroupLayout(pnlMedicine);
        pnlMedicine.setLayout(pnlMedicineLayout);
        pnlMedicineLayout.setHorizontalGroup(
            pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headingCus1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlButtonMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlInforMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMedicineLayout.setVerticalGroup(
            pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingCus1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addComponent(pnlInforMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tpPharma.addTab("Medicine", pnlMedicine);

        pnlManufactor.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setBackground(new java.awt.Color(102, 102, 0));
        jLabel17.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 102));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("MANAGE MANUFACTOR");

        pnlManuInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setText("Manufactor ID:");

        jLabel18.setText("Name:");

        jLabel19.setText("Address:");

        jLabel21.setText("Phone:");

        txtManuPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManuPhoneKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlManuInfoLayout = new javax.swing.GroupLayout(pnlManuInfo);
        pnlManuInfo.setLayout(pnlManuInfoLayout);
        pnlManuInfoLayout.setHorizontalGroup(
            pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManuInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManuPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(txtManuAdd)
                    .addComponent(txtManuName)
                    .addComponent(txtManuID))
                .addContainerGap())
        );
        pnlManuInfoLayout.setVerticalGroup(
            pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManuInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtManuID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtManuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtManuAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtManuPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pnlButtonManu.setBackground(new java.awt.Color(255, 255, 255));

        btnAddManu.setText("Add");
        btnAddManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnAddManu);

        btnUpdateManu.setText("Update");
        btnUpdateManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnUpdateManu);

        btnDeleteManu.setText("Delete");
        btnDeleteManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnDeleteManu);

        btnClearManu.setText("Reset");
        btnClearManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnClearManu);

        tbManu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbManu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbManuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbManu);

        javax.swing.GroupLayout pnlManufactorLayout = new javax.swing.GroupLayout(pnlManufactor);
        pnlManufactor.setLayout(pnlManufactorLayout);
        pnlManufactorLayout.setHorizontalGroup(
            pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlManufactorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlButtonManu, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                    .addComponent(pnlManuInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlManufactorLayout.setVerticalGroup(
            pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManufactorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlManufactorLayout.createSequentialGroup()
                        .addComponent(pnlManuInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(pnlButtonManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tpPharma.addTab("Manufactor", pnlManufactor);

        pnlBill.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("MANAGE BILL");

        pnlReportInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setText("Bill ID:");

        javax.swing.GroupLayout pnlReportInfoLayout = new javax.swing.GroupLayout(pnlReportInfo);
        pnlReportInfo.setLayout(pnlReportInfoLayout);
        pnlReportInfoLayout.setHorizontalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        pnlReportInfoLayout.setVerticalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButtonReport.setBackground(new java.awt.Color(255, 255, 255));

        btnAddBill.setText("Add");
        btnAddBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBillActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnAddBill);

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnReset);

        tbBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBillMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbBill);

        tbgetBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbgetBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbgetBillMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbgetBill);

        javax.swing.GroupLayout pnlBillLayout = new javax.swing.GroupLayout(pnlBill);
        pnlBill.setLayout(pnlBillLayout);
        pnlBillLayout.setHorizontalGroup(
            pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBillLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnlReportInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlButtonReport, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlBillLayout.setVerticalGroup(
            pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(pnlReportInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBillLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tpPharma.addTab("Bill", pnlBill);

        mbPharma.setBackground(new java.awt.Color(255, 255, 255));
        mbPharma.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        mSystem.setText("System");

        btnSignOut.setText("Sign Out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        mSystem.add(btnSignOut);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        mSystem.add(btnExit);

        mbPharma.add(mSystem);

        mUser.setText("Account");

        btnUserInfo.setText("Account Info");
        btnUserInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserInfoActionPerformed(evt);
            }
        });
        mUser.add(btnUserInfo);

        btnChangePassword.setText("Change Password");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });
        mUser.add(btnChangePassword);

        mbPharma.add(mUser);

        mStatistics.setText("Statistics");
        mStatistics.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mStatisticsMouseClicked(evt);
            }
        });
        mbPharma.add(mStatistics);

        mAbout.setText("About ");
        mAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mAboutMouseClicked(evt);
            }
        });
        mAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAboutActionPerformed(evt);
            }
        });
        mbPharma.add(mAbout);

        setJMenuBar(mbPharma);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpPharma)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpPharma)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void SelectMed() {
        String sql = "select a.MedicineID, a.MedicineName, a.MedicineUnitPrice, a.MedicineInventory, a.MedicineExpire, b.ManufactorName from medicine a, manufactor b where a.ManufactorID = b.ManufactorID";
        dataTable(sql, tbMedi);
    }

    public void SelectCus() {
        String sql = "select * from customer";
        dataTable(sql, tbCus);
    }

    public void SelectMan() {
        String sql = "select * from manufactor";
        dataTable(sql, tbManu);
    }
    
    public void SelectTbGetBill() {
        String sql = "select * from bill";
        dataTable(sql, tbgetBill);
    }
//    public void SelectBill() {
//        String sql = "select a.BillID, a.BillDate, c.CustomerName , e.MedicineName, e.MedicineUnitPrice, b.Amout, (e.MedicineUnitPrice*b.Amout) as Money, d.EmployeesID from pharmacydb.bill a, pharmacydb.bill_detail  b, pharmacydb.customer c, pharmacydb.employees d, pharmacydb.medicine e where a.BillID=b.BillID and a.CustomerID=c.CustomerID and a.EmployeesID=d.EmployeesID and b.MedicineID=e.MedicineID";
//        dataTable(sql, tbBill);
//    }

    public void jdateCurrentMedi() {
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        dateExp.setDate(date);
        //dateFab.setDate(date);

    }

    public void jdateCurrentCus() {
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        dateCusBirth.setDate(date);
    }
    
    String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());
    public void cbxCpndata() {
        try {
            getConnect();
            String sql = "select DISTINCT ManufactorName from manufactor";
            excuteSQL(sql);
            while (rs.next()) {
                cbxCompany.addItem(rs.getString("ManufactorName"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        closeConnect();
    }

    java.util.Date dateEx, dateFa, dateBi, dateCus;
    java.sql.Date MyFab, MyExp, emp_birth, cus_birth;
    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        // TODO add your handling code here:
        Signin si = new Signin();
        si.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnUserInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserInfoActionPerformed
        // TODO add your handling code here:
        UserInfo ui = new UserInfo();
        ui.setVisible(true);
    }//GEN-LAST:event_btnUserInfoActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        // TODO add your handling code here:
        ChangePass cp = new ChangePass();
        cp.setVisible(true);
    }//GEN-LAST:event_btnChangePasswordActionPerformed

    private void mAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAboutActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_mAboutActionPerformed

    private void btnAddMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedActionPerformed
        // TODO add your handling code here:
        dateEx = dateExp.getDate();
        MyExp = new java.sql.Date(dateEx.getTime());
        if (txtMedName.getText().equals("") || txtMedUnit.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something is empty!");
        } else {
            try {
                String man_id = "";
                getConnect();
                String sql = "SELECT MedicineID FROM medicine ORDER BY MedicineID DESC LIMIT 1";
                String colname = "MedicineID";
                String type = "MED";
                String med_id = insertID(type, sql, colname);
                String sql_add = "insert into medicine values (?,?,?,?,?)";
                String get_id = "select ManufactorID from manufactor where ManufactorName=?";
                excuteAdd(sql_add);
                excuteGet(get_id);
                get.setString(1, cbxCompany.getSelectedItem().toString());
                rs2 = get.executeQuery();
                if (rs2.next()) {
                    man_id = rs2.getString("ManufactorID");
                }
                String sql_check = "select MedicineName from medicine where MedicineName = ?";
                excuteCheck(sql_check);
                check.setString(1, txtMedName.getText());
                rs1 = check.executeQuery();
                if (rs1.next()) {
                    JOptionPane.showMessageDialog(this, "Medicine have already exists!");
                } else {

                    try {
                        add.setString(1, med_id);
                        add.setString(2, txtMedName.getText());
                        add.setDouble(3, Double.valueOf(txtMedUnit.getText()));
                        add.setInt(4, Integer.valueOf(txtMedInventory.getText()));
                        add.setDate(5, MyExp);
                        add.setString(6, man_id);
                        int row = add.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Add successful!");
                        SelectMed();
                    } catch (SQLException ex) {
                        Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnAddMedActionPerformed

    private void btnUpdateMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMedActionPerformed
        // TODO add your handling code here:
        if (txtMedID.getText().equals("") || txtMedName.getText().equals("") || txtMedUnit.getText().equals("") || txtMedInventory.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something is empty");
        } else {
            try {
                String man_id = "";
                dateEx = dateExp.getDate();
                MyExp = new java.sql.Date(dateEx.getTime());
                getConnect();
                String get_id = "select ManufactorID from manufactor where ManufactorName=?";
                excuteGet(get_id);
                get.setString(1, cbxCompany.getSelectedItem().toString());
                rs = get.executeQuery();

                if (rs.next()) {
                    man_id = rs.getString("ManufactorID");
                }
                String sql = "update medicine set MedicineName='" + txtMedName.getText() + "', MedicineUnitPrice=" + txtMedUnit.getText() + ", MedicineInventory="+ txtMedInventory.getText() +", MedicineExpire='" + MyExp + "',ManufactorID='" + man_id + "' where MedicineID='" + txtMedID.getText() + "'";
                excuteUpdate_Delete(sql);
                JOptionPane.showMessageDialog(this, "Updated Success");
                SelectMed();
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateMedActionPerformed

    private void btnDeleteMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMedActionPerformed
        // TODO add your handling code here:
        if (txtMedID.getText().equals("") || txtMedName.getText().equals("") || txtMedUnit.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from medicine where MedicineID='" + txtMedID.getText() + "'";
            excuteUpdate_Delete(sql);
            SelectMed();
            JOptionPane.showMessageDialog(this, "Delete success");
        }
        closeConnect();
        btnClearMedActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteMedActionPerformed

    private void btnClearMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearMedActionPerformed
        // TODO add your handling code here:
        txtMedID.setText("");
        txtMedName.setText("");
        txtMedUnit.setText("");
        jdateCurrentMedi();
        cbxCompany.setSelectedIndex(0);
        SelectMed();
    }//GEN-LAST:event_btnClearMedActionPerformed

    private void txtMedIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedIDKeyTyped

    private void txtMedUnitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedUnitKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtMedUnit.requestFocus();
        }
    }//GEN-LAST:event_txtMedUnitKeyTyped

    private void tbMediMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMediMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tbMedi.getModel();
            int Myindex = tbMedi.getSelectedRow();
            txtMedID.setText(model.getValueAt(Myindex, 0).toString());
            txtMedName.setText(model.getValueAt(Myindex, 1).toString());
            txtMedUnit.setText(model.getValueAt(Myindex, 2).toString());
            txtMedInventory.setText(model.getValueAt(Myindex, 3).toString());
            Date dateE = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(Myindex, 4).toString());
            dateExp.setDate(dateE);
            String company = model.getValueAt(Myindex, 5).toString();
            cbxCompany.setSelectedItem(company);
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbMediMouseClicked

    private void btnDeleteCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCusActionPerformed
        // TODO add your handling code here:
        if (txtCusID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from customer where CustomerID='" + txtCusID.getText() + "'";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Delete success");
            SelectCus();
        }
        closeConnect();
        btnClearCusActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteCusActionPerformed

    private void btnClearCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCusActionPerformed
        // TODO add your handling code here:
        txtCusID.setText("");
        txtCusName.setText("");
        txtCusAdd.setText("");
        txtCusPhone.setText("");
        jdateCurrentCus();
        SelectCus();;
    }//GEN-LAST:event_btnClearCusActionPerformed

    private void txtCusPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCusPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCusPhoneActionPerformed

    private void txtCusPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCusPhoneKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtCusPhone.requestFocus();
        }
    }//GEN-LAST:event_txtCusPhoneKeyTyped

    private void tbCusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCusMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tbCus.getModel();
            int Myindex = tbCus.getSelectedRow();
            txtCusID.setText(model.getValueAt(Myindex, 0).toString());
            txtCusName.setText(model.getValueAt(Myindex, 1).toString());
            txtCusAdd.setText(model.getValueAt(Myindex, 2).toString());
            txtCusPhone.setText(model.getValueAt(Myindex, 3).toString());
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(Myindex, 4).toString());
            dateCusBirth.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbCusMouseClicked

    private void tbCusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCusMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tbCusMouseEntered

    private void txtManuPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManuPhoneKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtManuPhone.requestFocus();
        }
    }//GEN-LAST:event_txtManuPhoneKeyTyped

    private void btnAddManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddManuActionPerformed
        // TODO add your handling code here:
        if (txtManuID.getText().equals("") || txtManuName.getText().equals("") || txtManuAdd.getText().equals("") || txtManuPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something is empty!");
        } else {
            try {
                getConnect();
                String sql = "SELECT ManufactorID FROM manufactor ORDER BY ManufactorID DESC LIMIT 1";
                String colname = "ManufactorID";
                String type = "MAN";
                String man_id = insertID(type, sql, colname);
                String sql_add = "insert into manufactor values (?,?,?,?)";
                String sql_check = "select * from manufactor where ManufactorName=?";
                excuteAdd(sql_add);
                excuteCheck(sql_check);
                check.setString(1, txtManuName.getText());
                rs = check.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Manufactor have already!");
                } else {
                    add.setString(1, man_id);
                    add.setString(2, txtManuName.getText());
                    add.setString(3, txtManuAdd.getText());
                    add.setString(4, txtManuPhone.getText());
                    int row = add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Add successful!");
                    SelectMan();
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnAddManuActionPerformed

    private void btnUpdateManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateManuActionPerformed
        // TODO add your handling code here:
        if (txtManuID.getText().equals("") || txtManuName.getText().equals("") || txtManuAdd.getText().equals("") || txtManuPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something wrong");
        } else {
            getConnect();
            String sql = "update manufactor set ManufactorName='" + txtManuName.getText() + "',ManufactorAddress='" + txtManuAdd.getText() + "',ManufactorPhone='" + txtManuPhone.getText() + "' where ManufactorID='" + txtManuID.getText() + "'";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Updated Success");
            SelectMan();
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateManuActionPerformed

    private void btnDeleteManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteManuActionPerformed
        // TODO add your handling code here:
        if (txtManuID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from manufactor where ManufactorID='" + txtManuID.getText() + "'";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Delete success");
            SelectMan();
        }
        closeConnect();
        btnClearManuActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteManuActionPerformed

    private void btnClearManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearManuActionPerformed
        // TODO add your handling code here:
        txtManuID.setText("");
        txtManuName.setText("");
        txtManuAdd.setText("");
        txtManuPhone.setText("");
        SelectMan();
    }//GEN-LAST:event_btnClearManuActionPerformed

    private void tbManuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbManuMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbManu.getModel();
        int Myindex = tbManu.getSelectedRow();
        txtManuID.setText(model.getValueAt(Myindex, 0).toString());
        txtManuName.setText(model.getValueAt(Myindex, 1).toString());
        txtManuAdd.setText(model.getValueAt(Myindex, 2).toString());
        txtManuPhone.setText(model.getValueAt(Myindex, 3).toString());
    }//GEN-LAST:event_tbManuMouseClicked

    private void mAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mAboutMouseClicked
        // TODO add your handling code here:
        About a = new About();
        a.setVisible(true);
    }//GEN-LAST:event_mAboutMouseClicked

    private void tbBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBillMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbBill.getModel();
        int Myindex = tbBill.getSelectedRow();
        txtBillID.setText(model.getValueAt(Myindex, 0).toString());
    }//GEN-LAST:event_tbBillMouseClicked

    private void btnAddBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBillActionPerformed
        InputCus ic = new InputCus();
        ic.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAddBillActionPerformed

    private void btnUpdateCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCusActionPerformed
        // TODO add your handling code here:
        if (txtCusAdd.getText().equals("") || txtCusName.getText().equals("") || txtCusPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing is empty");
        } else {
            getConnect();
            dateCus = dateCusBirth.getDate();
            cus_birth = new java.sql.Date(dateCus.getTime());
            String sql = "update customer set CustomerName='" + txtCusName.getText() + "', CustomerAddress='" + txtCusAdd.getText() + "',CustomerPhone='" + txtCusPhone.getText() + "', CustomerBirthday='" + cus_birth + "' where CustomerID='" + txtCusID.getText() + "'";
            excuteUpdate_Delete(sql);
            SelectCus();
            JOptionPane.showMessageDialog(this, "Updated Success");
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateCusActionPerformed

    private void btnAddCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCusActionPerformed
        // TODO add your handling code here:
        dateCus = dateCusBirth.getDate();
        cus_birth = new java.sql.Date(dateCus.getTime());
        if (txtCusAdd.getText().equals("") || txtCusName.getText().equals("") || txtCusPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing is empty");
        } else {
            try {
                String cus_phone = "";
                getConnect();
                String sql = "SELECT CustomerID FROM customer ORDER BY CustomerID DESC LIMIT 1";
                String colname = "CustomerID";
                String type = "CUS";
                String cus_id = insertID(type, sql, colname);
                String sql_add = "insert into customer values (?,?,?,?,?)";
                String sql_check = "select * from customer where CustomerName=?";
                excuteAdd(sql_add);
                excuteCheck(sql_check);
                check.setString(1, txtCusName.getText());
                rs = check.executeQuery();
                if (rs.next()) {
                    cus_phone = rs.getString("CustomerPhone");

                } else {
                    if (txtCusPhone.getText().equals(cus_phone)) {
                        JOptionPane.showMessageDialog(this, "Username has already!");
                    } else {
                        add.setString(1, cus_id);
                        add.setString(2, txtCusName.getText());
                        add.setString(3, txtCusAdd.getText());
                        add.setString(4, txtCusPhone.getText());
                        add.setDate(5, cus_birth);
                        int row = add.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Add success");
                        SelectCus();
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddCusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtBillID.setText("");
        //SelectBill();
        SelectTbGetBill();
    }//GEN-LAST:event_btnResetActionPerformed

    private void tbgetBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbgetBillMouseClicked
         // TODO add your handling code here:
          DefaultTableModel model = (DefaultTableModel) tbgetBill.getModel();
        int Myindex = tbgetBill.getSelectedRow();
        String idbill = model.getValueAt(Myindex, 0).toString();
        txtBillID.setText(idbill);
        String sql = "select a.BillID, a.BillDate, c.CustomerName , e.MedicineName, e.MedicineUnitPrice, b.Amout, (e.MedicineUnitPrice*b.Amout) as Money, d.EmployeesID from pharmacydb.bill a, pharmacydb.bill_detail  b, pharmacydb.customer c, pharmacydb.employees d, pharmacydb.medicine e where a.CustomerID=c.CustomerID and a.EmployeesID=d.EmployeesID and b.MedicineID=e.MedicineID and a.BillID=b.BillID and a.BillID='"+idbill+"'";
        dataTable(sql, tbBill);
    }//GEN-LAST:event_tbgetBillMouseClicked

    private void txtMedInventoryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedInventoryKeyTyped
         // TODO add your handling code here:
         char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtMedInventory.requestFocus();
        }
    }//GEN-LAST:event_txtMedInventoryKeyTyped

    private void mStatisticsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mStatisticsMouseClicked

            // TODO add your handling code here:
            Statistics st = new Statistics();
            st.setVisible(true);
            //this.dispose();
    }//GEN-LAST:event_mStatisticsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartScreenUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartScreenUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartScreenUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartScreenUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartScreenUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBill;
    private javax.swing.JButton btnAddCus;
    private javax.swing.JButton btnAddManu;
    private javax.swing.JButton btnAddMed;
    private javax.swing.JMenuItem btnChangePassword;
    private javax.swing.JButton btnClearCus;
    private javax.swing.JButton btnClearManu;
    private javax.swing.JButton btnClearMed;
    private javax.swing.JButton btnDeleteCus;
    private javax.swing.JButton btnDeleteManu;
    private javax.swing.JButton btnDeleteMed;
    private javax.swing.JMenuItem btnExit;
    private javax.swing.JButton btnReset;
    private javax.swing.JMenuItem btnSignOut;
    private javax.swing.JButton btnUpdateCus;
    private javax.swing.JButton btnUpdateManu;
    private javax.swing.JButton btnUpdateMed;
    private javax.swing.JMenuItem btnUserInfo;
    private javax.swing.JComboBox<String> cbxCompany;
    private com.toedter.calendar.JDateChooser dateCusBirth;
    private com.toedter.calendar.JDateChooser dateExp;
    private javax.swing.JLabel headingCus;
    private javax.swing.JLabel headingCus1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JMenu mAbout;
    private javax.swing.JMenu mStatistics;
    private javax.swing.JMenu mSystem;
    private javax.swing.JMenu mUser;
    private javax.swing.JMenuBar mbPharma;
    private javax.swing.JPanel pnlBill;
    private javax.swing.JPanel pnlButtonCus;
    private javax.swing.JPanel pnlButtonManu;
    private javax.swing.JPanel pnlButtonMed;
    private javax.swing.JPanel pnlButtonReport;
    private javax.swing.JPanel pnlCusInfo;
    public static javax.swing.JPanel pnlCustomer;
    private javax.swing.JPanel pnlInforMed;
    private javax.swing.JPanel pnlManuInfo;
    private javax.swing.JPanel pnlManufactor;
    private javax.swing.JPanel pnlMedicine;
    private javax.swing.JPanel pnlReportInfo;
    private javax.swing.JTable tbBill;
    private javax.swing.JTable tbCus;
    private javax.swing.JTable tbManu;
    private javax.swing.JTable tbMedi;
    private javax.swing.JTable tbgetBill;
    public static javax.swing.JTabbedPane tpPharma;
    private javax.swing.JTextField txtBillID;
    private javax.swing.JTextField txtCusAdd;
    private javax.swing.JTextField txtCusID;
    private javax.swing.JTextField txtCusName;
    private javax.swing.JTextField txtCusPhone;
    private javax.swing.JTextField txtManuAdd;
    private javax.swing.JTextField txtManuID;
    private javax.swing.JTextField txtManuName;
    private javax.swing.JTextField txtManuPhone;
    private javax.swing.JTextField txtMedID;
    private javax.swing.JTextField txtMedInventory;
    private javax.swing.JTextField txtMedName;
    private javax.swing.JTextField txtMedUnit;
    // End of variables declaration//GEN-END:variables
}
