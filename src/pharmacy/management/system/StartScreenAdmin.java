/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy.management.system;

import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import static pharmacy.management.system.DBProvider.add;
import static pharmacy.management.system.DBProvider.check;
import static pharmacy.management.system.DBProvider.closeConnect;
import static pharmacy.management.system.DBProvider.excuteAdd;
import static pharmacy.management.system.DBProvider.excuteCheck;
import static pharmacy.management.system.DBProvider.excuteGet;
import static pharmacy.management.system.DBProvider.excuteSQL;
import static pharmacy.management.system.DBProvider.excuteUpdate_Delete;
import static pharmacy.management.system.DBProvider.get;
import static pharmacy.management.system.DBProvider.getConnect;
import static pharmacy.management.system.DBProvider.rs;
import static pharmacy.management.system.DBProvider.rs1;
import static pharmacy.management.system.DBProvider.rs2;

/**
 *
 * @author HOANG
 */
public class StartScreenAdmin extends javax.swing.JFrame {

    /**
     * Creates new form StartScreenAdmin
     */
    public StartScreenAdmin() {
        initComponents();
        SelectMed();
        SelectCus();
        SelectMan();
        SelectEmp();
        SelectRepo();
        cbxCpndata();
        jdateCurrentMedi();
        jdateCurrentCus();
        jdateCurrentEmp();
        jdateCurrentReport();
        cbxEmptypeData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textEditor1 = new com.sun.activation.viewers.TextEditor();
        tbAdmin = new javax.swing.JTabbedPane();
        pnlMedicine = new javax.swing.JPanel();
        lbMedicine = new javax.swing.JLabel();
        pnlInforMed = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMedID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMedName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMedUnit = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMedAmount = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMedExists = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dateFab = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        dateExp = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        cbxCompany = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMedi = new javax.swing.JTable();
        pnlButtonMed = new javax.swing.JPanel();
        btnAddMed = new javax.swing.JButton();
        btnUpdateMed = new javax.swing.JButton();
        btnDeleteMed = new javax.swing.JButton();
        btnClearMed = new javax.swing.JButton();
        pnlCustomer = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        pnlCusInfo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtCusID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCusName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCusAdd = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCusPhone = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        dateCusBirth = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCus = new javax.swing.JTable();
        pnlButtonCus = new javax.swing.JPanel();
        btnAddCus = new javax.swing.JButton();
        btnUpdateCus = new javax.swing.JButton();
        btnDeleteCus = new javax.swing.JButton();
        btnClearCus = new javax.swing.JButton();
        pnlManufactor = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        pnlManuInfo = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtManuID = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtManuName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtManuAdd = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtManuExp = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtManuPhone = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbManu = new javax.swing.JTable();
        pnlButtonManu = new javax.swing.JPanel();
        btnAddManu = new javax.swing.JButton();
        btnUpdateManu = new javax.swing.JButton();
        btnDeleteManu = new javax.swing.JButton();
        btnClearManu = new javax.swing.JButton();
        pnlEmployees = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        pnlEmpInfo = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        txtEmpName = new javax.swing.JTextField();
        txtEmpAdd = new javax.swing.JTextField();
        txtEmpPhone = new javax.swing.JTextField();
        txtEmpUsername = new javax.swing.JTextField();
        txtEmpPwd = new javax.swing.JTextField();
        cbxEmpType = new javax.swing.JComboBox<>();
        dateEmpBirth = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbEmp = new javax.swing.JTable();
        pnlButtonEmp = new javax.swing.JPanel();
        btnAddEmp = new javax.swing.JButton();
        btnUpdateEmp = new javax.swing.JButton();
        btnDeleteEmp = new javax.swing.JButton();
        btnClearEmp = new javax.swing.JButton();
        pnlReport = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        pnlReportInfo = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        txtReportID = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        dateReport = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        txtEmID = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtCuID = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtRepoTotal = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txtHH = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtMM = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        txtSS = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbReport = new javax.swing.JTable();
        pnlButtonReport = new javax.swing.JPanel();
        btnAddRepo = new javax.swing.JButton();
        btnUpdateRepo = new javax.swing.JButton();
        btnDeleteRepo = new javax.swing.JButton();
        btnReportDetail = new javax.swing.JButton();
        btnClearRepo = new javax.swing.JButton();
        mbPharma = new javax.swing.JMenuBar();
        mSystem = new javax.swing.JMenu();
        btnSignOut = new javax.swing.JMenuItem();
        btnExit = new javax.swing.JMenuItem();
        mAbout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pharmacy Management System");

        tbAdmin.setBackground(new java.awt.Color(255, 255, 255));

        pnlMedicine.setBackground(new java.awt.Color(255, 255, 255));

        lbMedicine.setBackground(new java.awt.Color(255, 255, 255));
        lbMedicine.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lbMedicine.setForeground(new java.awt.Color(0, 153, 102));
        lbMedicine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMedicine.setText("MANAGE MEDICINE");

        pnlInforMed.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Medicine ID:");

        txtMedID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedIDKeyTyped(evt);
            }
        });

        jLabel2.setText("Name:");

        jLabel3.setText("Unit Price:");

        txtMedUnit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedUnitKeyTyped(evt);
            }
        });

        jLabel4.setText("Amount:");

        txtMedAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedAmountKeyTyped(evt);
            }
        });

        jLabel5.setText("Exists:");

        txtMedExists.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMedExistsKeyTyped(evt);
            }
        });

        jLabel6.setText("Fab:");

        dateFab.setDateFormatString("yyyy-MM-dd");

        jLabel7.setText("Exp:");

        dateExp.setDateFormatString("yyyy-MM-dd");

        jLabel8.setText("Company:");

        javax.swing.GroupLayout pnlInforMedLayout = new javax.swing.GroupLayout(pnlInforMed);
        pnlInforMed.setLayout(pnlInforMedLayout);
        pnlInforMedLayout.setHorizontalGroup(
            pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInforMedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateFab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlInforMedLayout.createSequentialGroup()
                        .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInforMedLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMedUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInforMedLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInforMedLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMedExists, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInforMedLayout.createSequentialGroup()
                                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMedName, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                                    .addComponent(txtMedID))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlInforMedLayout.setVerticalGroup(
            pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInforMedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMedID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMedName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMedUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMedExists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(dateFab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(dateExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInforMedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbxCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbMedi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMedi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMediMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbMedi);

        pnlButtonMed.setBackground(new java.awt.Color(255, 255, 255));

        btnAddMed.setText("Add");
        btnAddMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnAddMed);

        btnUpdateMed.setText("Update");
        btnUpdateMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnUpdateMed);

        btnDeleteMed.setText("Delete");
        btnDeleteMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnDeleteMed);

        btnClearMed.setText("Clear");
        btnClearMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearMedActionPerformed(evt);
            }
        });
        pnlButtonMed.add(btnClearMed);

        javax.swing.GroupLayout pnlMedicineLayout = new javax.swing.GroupLayout(pnlMedicine);
        pnlMedicine.setLayout(pnlMedicineLayout);
        pnlMedicineLayout.setHorizontalGroup(
            pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbMedicine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlButtonMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlInforMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMedicineLayout.setVerticalGroup(
            pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addComponent(pnlInforMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tbAdmin.addTab("Medicine", pnlMedicine);

        pnlCustomer.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("MANAGE CUSTOMER");

        pnlCusInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setText("Customer ID:");

        jLabel11.setText("Name:");

        jLabel12.setText("Address:");

        jLabel13.setText("Phone:");

        txtCusPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCusPhoneActionPerformed(evt);
            }
        });
        txtCusPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCusPhoneKeyTyped(evt);
            }
        });

        jLabel14.setText("Birthday:");

        dateCusBirth.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout pnlCusInfoLayout = new javax.swing.GroupLayout(pnlCusInfo);
        pnlCusInfo.setLayout(pnlCusInfoLayout);
        pnlCusInfoLayout.setHorizontalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateCusBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCusPhone))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCusAdd))
                    .addGroup(pnlCusInfoLayout.createSequentialGroup()
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCusName)
                            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                                .addComponent(txtCusID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCusInfoLayout.setVerticalGroup(
            pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCusInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCusID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCusAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtCusPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCusInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(dateCusBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        tbCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tbCusMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tbCus);

        pnlButtonCus.setBackground(new java.awt.Color(255, 255, 255));

        btnAddCus.setText("Add");
        btnAddCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnAddCus);

        btnUpdateCus.setText("Update");
        btnUpdateCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnUpdateCus);

        btnDeleteCus.setText("Delete");
        btnDeleteCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnDeleteCus);

        btnClearCus.setText("Clear");
        btnClearCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCusActionPerformed(evt);
            }
        });
        pnlButtonCus.add(btnClearCus);

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlCustomerLayout.createSequentialGroup()
                        .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlButtonCus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlCusInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCustomerLayout.createSequentialGroup()
                        .addComponent(pnlCusInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonCus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tbAdmin.addTab("Customer", pnlCustomer);

        pnlManufactor.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 153, 102));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("MANAGE MANUFACTOR");

        pnlManuInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setText("Manufactor ID:");

        jLabel17.setText("Name:");

        jLabel18.setText("Address:");

        jLabel19.setText("Experiences:");

        jLabel20.setText("Phone:");

        txtManuPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManuPhoneKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlManuInfoLayout = new javax.swing.GroupLayout(pnlManuInfo);
        pnlManuInfo.setLayout(pnlManuInfoLayout);
        pnlManuInfoLayout.setHorizontalGroup(
            pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManuInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManuPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(txtManuExp)
                    .addComponent(txtManuAdd)
                    .addComponent(txtManuName)
                    .addComponent(txtManuID))
                .addContainerGap())
        );
        pnlManuInfoLayout.setVerticalGroup(
            pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManuInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtManuID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtManuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtManuAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtManuExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlManuInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtManuPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        tbManu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbManu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbManuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbManu);

        pnlButtonManu.setBackground(new java.awt.Color(255, 255, 255));

        btnAddManu.setText("Add");
        btnAddManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnAddManu);

        btnUpdateManu.setText("Update");
        btnUpdateManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnUpdateManu);

        btnDeleteManu.setText("Delete");
        btnDeleteManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnDeleteManu);

        btnClearManu.setText("Clear");
        btnClearManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearManuActionPerformed(evt);
            }
        });
        pnlButtonManu.add(btnClearManu);

        javax.swing.GroupLayout pnlManufactorLayout = new javax.swing.GroupLayout(pnlManufactor);
        pnlManufactor.setLayout(pnlManufactorLayout);
        pnlManufactorLayout.setHorizontalGroup(
            pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManufactorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlManufactorLayout.createSequentialGroup()
                        .addGroup(pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlManuInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlButtonManu, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlManufactorLayout.setVerticalGroup(
            pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlManufactorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlManufactorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlManufactorLayout.createSequentialGroup()
                        .addComponent(pnlManuInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tbAdmin.addTab("Manufactor", pnlManufactor);

        pnlEmployees.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 153, 102));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("MANAGE EMPLOYEES");

        pnlEmpInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setText("ID:");

        jLabel23.setText("Name:");

        jLabel24.setText("Address:");

        jLabel25.setText("Birthday:");

        jLabel26.setText("Phone:");

        jLabel27.setText("Username:");

        jLabel28.setText("Password:");

        jLabel29.setText("Type Account:");

        txtEmpPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpPhoneKeyTyped(evt);
            }
        });

        dateEmpBirth.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout pnlEmpInfoLayout = new javax.swing.GroupLayout(pnlEmpInfo);
        pnlEmpInfo.setLayout(pnlEmpInfoLayout);
        pnlEmpInfoLayout.setHorizontalGroup(
            pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmpInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmpID)
                    .addComponent(txtEmpName)
                    .addComponent(txtEmpAdd)
                    .addComponent(txtEmpPhone)
                    .addComponent(txtEmpUsername)
                    .addComponent(txtEmpPwd)
                    .addComponent(cbxEmpType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateEmpBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEmpInfoLayout.setVerticalGroup(
            pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmpInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtEmpAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(dateEmpBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtEmpPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtEmpUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtEmpPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlEmpInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(cbxEmpType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEmpMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbEmp);

        pnlButtonEmp.setBackground(new java.awt.Color(255, 255, 255));

        btnAddEmp.setText("Add");
        btnAddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmpActionPerformed(evt);
            }
        });
        pnlButtonEmp.add(btnAddEmp);

        btnUpdateEmp.setText("Update");
        btnUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmpActionPerformed(evt);
            }
        });
        pnlButtonEmp.add(btnUpdateEmp);

        btnDeleteEmp.setText("Delete");
        btnDeleteEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmpActionPerformed(evt);
            }
        });
        pnlButtonEmp.add(btnDeleteEmp);

        btnClearEmp.setText("Clear");
        btnClearEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearEmpActionPerformed(evt);
            }
        });
        pnlButtonEmp.add(btnClearEmp);

        javax.swing.GroupLayout pnlEmployeesLayout = new javax.swing.GroupLayout(pnlEmployees);
        pnlEmployees.setLayout(pnlEmployeesLayout);
        pnlEmployeesLayout.setHorizontalGroup(
            pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmployeesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlEmployeesLayout.createSequentialGroup()
                        .addGroup(pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlEmpInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlButtonEmp, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlEmployeesLayout.setVerticalGroup(
            pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmployeesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEmployeesLayout.createSequentialGroup()
                        .addComponent(pnlEmpInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tbAdmin.addTab("Employess", pnlEmployees);

        pnlReport.setBackground(new java.awt.Color(255, 255, 255));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 153, 102));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("MANAGE REPORT");

        pnlReportInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setText("Report ID:");

        jLabel32.setText("Date:");

        dateReport.setDateFormatString("yyyy-MM-dd");

        jLabel33.setText("Empployee ID:");

        jLabel34.setText("Customer ID:");

        jLabel35.setText("Total:");

        jLabel36.setText("Time:");

        txtHH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHHKeyTyped(evt);
            }
        });

        jLabel37.setText("/");

        txtMM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMMKeyTyped(evt);
            }
        });

        jLabel38.setText("/");

        txtSS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSSKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlReportInfoLayout = new javax.swing.GroupLayout(pnlReportInfo);
        pnlReportInfo.setLayout(pnlReportInfoLayout);
        pnlReportInfoLayout.setHorizontalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReportInfoLayout.createSequentialGroup()
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel36))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                                .addComponent(txtHH, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMM, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSS, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtReportID)
                            .addComponent(dateReport, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlReportInfoLayout.createSequentialGroup()
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmID)
                            .addComponent(txtCuID)
                            .addComponent(txtRepoTotal))))
                .addContainerGap())
        );
        pnlReportInfoLayout.setVerticalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(txtReportID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtHH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(txtMM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(txtSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txtEmID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtCuID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txtRepoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        tbReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbReportMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbReport);

        pnlButtonReport.setBackground(new java.awt.Color(255, 255, 255));

        btnAddRepo.setText("Add");
        btnAddRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRepoActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnAddRepo);

        btnUpdateRepo.setText("Update");
        btnUpdateRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRepoActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnUpdateRepo);

        btnDeleteRepo.setText("Delete");
        btnDeleteRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRepoActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnDeleteRepo);

        btnReportDetail.setText("Details");
        btnReportDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportDetailActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnReportDetail);

        btnClearRepo.setText("Clear");
        btnClearRepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearRepoActionPerformed(evt);
            }
        });
        pnlButtonReport.add(btnClearRepo);

        javax.swing.GroupLayout pnlReportLayout = new javax.swing.GroupLayout(pnlReport);
        pnlReport.setLayout(pnlReportLayout);
        pnlReportLayout.setHorizontalGroup(
            pnlReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlReportLayout.createSequentialGroup()
                        .addGroup(pnlReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlReportInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlButtonReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlReportLayout.setVerticalGroup(
            pnlReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlReportLayout.createSequentialGroup()
                        .addComponent(pnlReportInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlButtonReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        tbAdmin.addTab("Report", pnlReport);

        mbPharma.setBackground(new java.awt.Color(255, 255, 255));
        mbPharma.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        mSystem.setText("System");

        btnSignOut.setText("Sign Out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        mSystem.add(btnSignOut);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        mSystem.add(btnExit);

        mbPharma.add(mSystem);

        mAbout.setText("About ");
        mAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mAboutMouseClicked(evt);
            }
        });
        mAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAboutActionPerformed(evt);
            }
        });
        mbPharma.add(mAbout);

        setJMenuBar(mbPharma);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbAdmin)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void SelectMed() {
        String sql = "select a.med_id, a.med_name, a.med_unitprice, a.med_amount, a.med_exists, a.med_fab, a.med_exp, b.man_name from medicine a, manufactor b where a.man_id = b.man_id";
        dataTable(sql, tbMedi);
    }

    public void SelectCus() {
        String sql = "select * from customer";
        dataTable(sql, tbCus);
    }

    public void SelectMan() {
        String sql = "select * from manufactor";
        dataTable(sql, tbManu);
    }

    public void SelectEmp() {
        String sql = "select * from nv";
        dataTable(sql, tbEmp);
    }

    public void SelectRepo() {
        String sql = "select * from report";
        dataTable(sql, tbReport);
    }

    public void dataTable(String sql, JTable tb) {
        getConnect();
        excuteSQL(sql);
        tb.setModel(DbUtils.resultSetToTableModel((rs)));
        closeConnect();
    }

    public void jdateCurrentMedi() {
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        dateExp.setDate(date);
        dateFab.setDate(date);

    }

    public void jdateCurrentCus() {
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        dateCusBirth.setDate(date);
    }

    public void jdateCurrentEmp() {
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        dateEmpBirth.setDate(date);
    }
    String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());

    public void jdateCurrentReport() {
        try {
            //        long millis = System.currentTimeMillis();
//        java.sql.Date date = new java.sql.Date(millis);
//        dateReport.setDate(date);            
            String[] parts = timeStamp.split(" ");
            String parts1 = parts[0];
            String parts2 = parts[1];
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(parts1);
            dateReport.setDate(date);
            String[] part = parts2.split(":");
            String part1 = part[0];
            String part2 = part[1];
            String part3 = part[2];
            txtHH.setText(part1);
            txtMM.setText(part2);
            txtSS.setText(part3);
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cbxCpndata() {
        try {
            getConnect();
            String sql = "select DISTINCT man_name from manufactor";
            excuteSQL(sql);
            while (rs.next()) {
                cbxCompany.addItem(rs.getString("man_name"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        closeConnect();
    }

    public void cbxEmptypeData() {
        try {
            getConnect();
            String sql = "select DISTINCT position from nv";
            excuteSQL(sql);
            while (rs.next()) {
                cbxEmpType.addItem(rs.getString("position"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        closeConnect();
    }
    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        // TODO add your handling code here:
        Signin si = new Signin();
        si.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void mAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAboutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mAboutActionPerformed

    private void tbMediMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMediMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tbMedi.getModel();
            int Myindex = tbMedi.getSelectedRow();
            txtMedID.setText(model.getValueAt(Myindex, 0).toString());
            txtMedName.setText(model.getValueAt(Myindex, 1).toString());
            txtMedUnit.setText(model.getValueAt(Myindex, 2).toString());
            txtMedAmount.setText(model.getValueAt(Myindex, 3).toString());
            txtMedExists.setText(model.getValueAt(Myindex, 4).toString());
            Date dateF = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(Myindex, 5).toString());
            dateExp.setDate(dateF);
            Date dateE = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(Myindex, 6).toString());
            dateFab.setDate(dateE);
            String company = model.getValueAt(Myindex, 7).toString();
            cbxCompany.setSelectedItem(company);
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbMediMouseClicked
    java.util.Date dateEx, dateFa, dateBi, dateCus, dateR;
    java.sql.Date MyFab, MyExp, emp_birth, cus_birth, report_date;
    private void btnAddMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedActionPerformed
        // TODO add your handling code here:
        dateFa = dateExp.getDate();
        MyFab = new java.sql.Date(dateFa.getTime());
        dateEx = dateFab.getDate();
        MyExp = new java.sql.Date(dateEx.getTime());
        if (txtMedID.getText().equals("") || txtMedName.getText().equals("") || txtMedUnit.getText().equals("") || txtMedAmount.getText().equals("") || txtMedExists.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Sonething is empty!");
        } else {
            try {
                int man_id = 0;
                getConnect();
                String med_name = "";
                String man_name_check = "";
                String sql_add = "insert into medicine values (?,?,?,?,?,?,?,?)";
                String get_id = "select man_id from manufactor where man_name=?";
                excuteAdd(sql_add);
                excuteGet(get_id);
                get.setString(1, cbxCompany.getSelectedItem().toString());
                rs2 = get.executeQuery();
                if (rs2.next()) {
                    man_id = rs2.getInt("man_id");
                }
                String sql_check = "select med_name from medicine where med_name = ?";
                excuteCheck(sql_check);
                check.setString(1, txtMedName.getText());
                rs1 = check.executeQuery();
                if (rs1.next()) {
                    JOptionPane.showMessageDialog(this, "Medicine have already exists!");
                } else {

                    try {
                        add.setInt(1, Integer.valueOf(txtMedID.getText()));
                        add.setString(2, txtMedName.getText());
                        add.setInt(3, Integer.valueOf(txtMedUnit.getText()));
                        add.setInt(4, Integer.valueOf(txtMedAmount.getText()));
                        add.setInt(5, Integer.valueOf(txtMedExists.getText()));
                        add.setDate(6, MyFab);
                        add.setDate(7, MyExp);
                        add.setInt(8, man_id);
                        int row = add.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Add successful!");
                        SelectMed();
                    } catch (SQLException ex) {
                        Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnAddMedActionPerformed

    private void btnClearMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearMedActionPerformed
        // TODO add your handling code here:
        txtMedID.setText("");
        txtMedName.setText("");
        txtMedUnit.setText("");
        txtMedAmount.setText("");
        jdateCurrentMedi();
        cbxCompany.setSelectedIndex(0);
        txtMedExists.setText("");
    }//GEN-LAST:event_btnClearMedActionPerformed

    private void txtMedIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedIDKeyTyped

    private void txtMedUnitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedUnitKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtMedUnit.requestFocus();
        }
    }//GEN-LAST:event_txtMedUnitKeyTyped

    private void txtMedAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedAmountKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtMedAmount.requestFocus();
        }
    }//GEN-LAST:event_txtMedAmountKeyTyped

    private void txtMedExistsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedExistsKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtMedExists.requestFocus();
        }
    }//GEN-LAST:event_txtMedExistsKeyTyped

    private void txtCusPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCusPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCusPhoneActionPerformed

    private void txtCusPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCusPhoneKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtCusPhone.requestFocus();
        }
    }//GEN-LAST:event_txtCusPhoneKeyTyped

    private void txtManuPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManuPhoneKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtManuPhone.requestFocus();
        }
    }//GEN-LAST:event_txtManuPhoneKeyTyped

    private void txtEmpPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpPhoneKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtEmpPhone.requestFocus();
        }
    }//GEN-LAST:event_txtEmpPhoneKeyTyped

    private void tbManuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbManuMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbManu.getModel();
        int Myindex = tbManu.getSelectedRow();
        txtManuID.setText(model.getValueAt(Myindex, 0).toString());
        txtManuName.setText(model.getValueAt(Myindex, 1).toString());
        txtManuAdd.setText(model.getValueAt(Myindex, 2).toString());
        txtManuExp.setText(model.getValueAt(Myindex, 3).toString());
        txtManuPhone.setText(model.getValueAt(Myindex, 4).toString());
    }//GEN-LAST:event_tbManuMouseClicked

    private void tbEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEmpMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tbEmp.getModel();
            int Myindex = tbEmp.getSelectedRow();
            txtEmpID.setText(model.getValueAt(Myindex, 0).toString());
            txtEmpName.setText(model.getValueAt(Myindex, 1).toString());
            txtEmpAdd.setText(model.getValueAt(Myindex, 2).toString());
            Date dateF = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(Myindex, 3).toString());
            dateEmpBirth.setDate(dateF);
            txtEmpPhone.setText(model.getValueAt(Myindex, 4).toString());
            txtEmpUsername.setText(model.getValueAt(Myindex, 5).toString());
            txtEmpPwd.setText(model.getValueAt(Myindex, 6).toString());
            String po = model.getValueAt(Myindex, 7).toString();
            cbxEmpType.setSelectedItem(po);
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbEmpMouseClicked

    private void tbCusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCusMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tbCusMouseEntered

    private void tbCusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCusMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tbCus.getModel();
            int Myindex = tbCus.getSelectedRow();
            txtCusID.setText(model.getValueAt(Myindex, 0).toString());
            txtCusName.setText(model.getValueAt(Myindex, 1).toString());
            txtCusAdd.setText(model.getValueAt(Myindex, 2).toString());
            txtCusPhone.setText(model.getValueAt(Myindex, 3).toString());
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(model.getValueAt(Myindex, 4).toString());
            dateCusBirth.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbCusMouseClicked

    private void btnUpdateMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMedActionPerformed
        // TODO add your handling code here:
        if (txtMedID.getText().equals("") || txtMedName.getText().equals("") || txtMedUnit.getText().equals("") || txtMedAmount.getText().equals("") || txtMedExists.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something is empty");
        } else {
            try {
                int man_id = 0;
                dateFa = dateExp.getDate();
                MyFab = new java.sql.Date(dateFa.getTime());
                dateEx = dateFab.getDate();
                MyExp = new java.sql.Date(dateEx.getTime());
                getConnect();
                String get_id = "select man_id from manufactor where man_name=?";
                excuteGet(get_id);
                get.setString(1, cbxCompany.getSelectedItem().toString());
                rs = get.executeQuery();

                if (rs.next()) {
                    man_id = rs.getInt("man_id");
                }
                String sql = "update medicine set med_name ='" + txtMedName.getText() + "', med_unitprice=" + txtMedUnit.getText() + ", med_amount=" + txtMedAmount.getText() + ", med_exists = '" + txtMedExists.getText() + "', med_fab='" + MyFab + "',med_exp='" + MyExp + "',man_id=" + man_id + " where med_id=" + txtMedID.getText() + "";
                excuteUpdate_Delete(sql);
                JOptionPane.showMessageDialog(this, "Updated Success");
                SelectMed();
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateMedActionPerformed

    private void btnDeleteMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMedActionPerformed
        // TODO add your handling code here:
        if (txtMedID.getText().equals("") || txtMedName.getText().equals("") || txtMedUnit.getText().equals("") || txtMedAmount.getText().equals("") || txtMedExists.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from medicine where med_id=" + txtMedID.getText() + "";
            excuteUpdate_Delete(sql);
            SelectMed();
            JOptionPane.showMessageDialog(this, "Delete success");
        }
        closeConnect();
        btnClearMedActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteMedActionPerformed

    private void btnAddManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddManuActionPerformed
        // TODO add your handling code here:
        if (txtManuID.getText().equals("") || txtManuName.getText().equals("") || txtManuAdd.getText().equals("") || txtManuExp.getText().equals("") || txtManuPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ID is empty!");
        } else {
            try {
                getConnect();
                String sql_add = "insert into manufactor values (?,?,?,?,?)";
                String sql_check = "select * from manufactor where man_name=?";
                excuteAdd(sql_add);
                excuteCheck(sql_check);
                check.setString(1, txtManuName.getText());
                rs = check.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Manufactor have already!");
                } else {
                    add.setInt(1, Integer.valueOf(txtManuID.getText()));
                    add.setString(2, txtManuName.getText());
                    add.setString(3, txtManuAdd.getText());
                    add.setString(4, txtManuExp.getText());
                    add.setString(5, txtManuPhone.getText());
                    int row = add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Add successful!");
                    SelectMan();
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnAddManuActionPerformed

    private void btnUpdateManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateManuActionPerformed
        // TODO add your handling code here:
        if (txtManuID.getText().equals("") || txtManuName.getText().equals("") || txtManuAdd.getText().equals("") || txtManuExp.getText().equals("") || txtManuPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something wrong");
        } else {
            getConnect();
            String sql = "update manufactor set man_name='" + txtManuName.getText() + "',man_add='" + txtManuAdd.getText() + "',man_exp='" + txtManuExp.getText() + "',man_phone='" + txtManuPhone.getText() + "' where man_id=" + txtManuID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Updated Success");
            SelectMan();
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateManuActionPerformed

    private void btnDeleteManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteManuActionPerformed
        // TODO add your handling code here:
        if (txtManuID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from manufactor where man_id=" + txtManuID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Delete success");
            SelectMan();
        }
        closeConnect();
        btnClearManuActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteManuActionPerformed

    private void btnClearManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearManuActionPerformed
        // TODO add your handling code here:
        txtManuID.setText("");
        txtManuName.setText("");
        txtManuAdd.setText("");
        txtManuExp.setText("");
        txtManuPhone.setText("");
    }//GEN-LAST:event_btnClearManuActionPerformed

    private void btnAddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmpActionPerformed
        // TODO add your handling code here:
        if (txtEmpID.getText().equals("") || txtEmpName.getText().equals("") || txtEmpAdd.getText().equals("") || txtEmpPhone.getText().equals("") || txtEmpUsername.getText().equals("") || txtEmpPwd.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing is empty!");
        } else {
            try {
                String emp_name = "", emp_phone = "", emp_username = "";
                dateBi = dateExp.getDate();
                emp_birth = new java.sql.Date(dateBi.getTime());
                getConnect();
                String sql_add = "insert into nv values (?,?,?,?,?,?,?,?)";
                String sql_check = "select * from nv where nv_name=?";
                excuteAdd(sql_add);
                excuteCheck(sql_check);
                check.setString(1, txtEmpName.getText());
                rs = check.executeQuery();
                if (rs.next()) {
                    emp_name = rs.getString("nv_name");
                    emp_phone = rs.getString("nv_phone");
                    emp_username = rs.getString("user_name");
                }
                if (txtEmpUsername.getText().equals(emp_name) == true) {
                    JOptionPane.showMessageDialog(this, "Username have already!");
                } else if ((txtEmpName.getText().equals(emp_name) == true) && (txtEmpPhone.getText().equals(emp_phone) == true)) {
                    JOptionPane.showMessageDialog(this, "Employees have already!");
                } else {
                    add.setInt(1, Integer.valueOf(txtEmpID.getText()));
                    add.setString(2, txtEmpName.getText());
                    add.setString(3, txtEmpAdd.getText());
                    add.setDate(4, emp_birth);
                    add.setString(5, txtEmpPhone.getText());
                    add.setString(6, txtEmpUsername.getText());
                    add.setString(7, txtEmpPwd.getText());
                    add.setString(8, cbxEmpType.getSelectedItem().toString());
                    int row = add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Add successful!");
                    SelectEmp();
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnAddEmpActionPerformed

    private void btnUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmpActionPerformed
        // TODO add your handling code here:
        if (txtEmpName.getText().equals("") || txtEmpAdd.getText().equals("") || txtEmpPhone.getText().equals("") || txtEmpUsername.getText().equals("") || txtEmpPwd.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something wrong");
        } else {
            getConnect();
            dateBi = dateEmpBirth.getDate();
            emp_birth = new java.sql.Date(dateBi.getTime());
            String sql = "update nv set nv_name='" + txtEmpName.getText() + "', nv_add='" + txtEmpAdd.getText() + "', nv_birthday='" + emp_birth + "', nv_phone='" + txtEmpPhone.getText() + "', user_name='" + txtEmpUsername.getText() + "', pwd='" + txtEmpPwd.getText() + "', position='" + cbxEmpType.getSelectedItem().toString() + "' where nv_id=" + txtEmpID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Updated Success");
            SelectEmp();
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateEmpActionPerformed

    private void btnDeleteEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmpActionPerformed
        // TODO add your handling code here:
        if (txtEmpID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from nv where nv_id=" + txtEmpID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Delete success");
            SelectEmp();
        }
        closeConnect();
        btnClearEmpActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteEmpActionPerformed

    private void btnClearEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearEmpActionPerformed
        // TODO add your handling code here:
        txtEmpID.setText("");
        txtEmpName.setText("");
        txtEmpAdd.setText("");
        txtEmpPhone.setText("");
        txtEmpUsername.setText("");
        txtEmpPwd.setText("");
        jdateCurrentEmp();
        cbxEmpType.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearEmpActionPerformed

    private void btnClearCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCusActionPerformed
        // TODO add your handling code here:
        txtCusID.setText("");
        txtCusName.setText("");
        txtCusAdd.setText("");
        txtCusPhone.setText("");
        jdateCurrentCus();
    }//GEN-LAST:event_btnClearCusActionPerformed

    private void btnDeleteCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCusActionPerformed
        // TODO add your handling code here:
        if (txtCusID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from customer where cus_id=" + txtCusID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Delete success");
            SelectCus();
        }
        closeConnect();
        btnClearCusActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteCusActionPerformed

    private void btnUpdateCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCusActionPerformed
        // TODO add your handling code here:
        if (txtCusID.getText().equals("") || txtCusName.getText().equals("") || txtCusAdd.getText().equals("") || txtCusPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something has been empty!");
        } else {
            dateCus = dateCusBirth.getDate();
            cus_birth = new java.sql.Date(dateCus.getTime());
            getConnect();
            String sql = "update customer set cus_name='" + txtCusName.getText() + "',cus_add='" + txtCusAdd.getText() + "',cus_phone='" + txtCusPhone.getText() + "',cus_birtday='" + cus_birth + "' where cus_id=" + txtCusID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Updated Success");
            SelectCus();
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateCusActionPerformed

    private void btnAddCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCusActionPerformed
        // TODO add your handling code here:
        if (txtCusName.getText().equals("") || txtCusAdd.getText().equals("") || txtCusPhone.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing is empty!");
        } else {
            try {
                String cus_name = "", cus_phone = "";
                dateCus = dateCusBirth.getDate();
                cus_birth = new java.sql.Date(dateCus.getTime());
                getConnect();
                String sql_add = "insert into customer values (?,?,?,?,?)";
                String sql_check = "select * from customer where cus_name=?";
                excuteAdd(sql_add);
                excuteCheck(sql_check);
                check.setString(1, txtCusName.getText());
                rs = check.executeQuery();
                if (rs.next()) {
                    cus_name = rs.getString("cus_name");
                    cus_phone = rs.getString("cus_phone");
                }
                if ((txtCusName.getText().equals(cus_name) == true) && (txtCusPhone.getText().equals(cus_phone) == true)) {
                    JOptionPane.showMessageDialog(this, "Customer have already!");
                } else {
                    add.setInt(1, Integer.valueOf(txtCusID.getText()));
                    add.setString(2, txtCusName.getText());
                    add.setString(3, txtCusAdd.getText());
                    add.setString(4, txtCusPhone.getText());
                    add.setDate(5, cus_birth);
                    int row = add.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Add successful!");
                    SelectCus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        closeConnect();
    }//GEN-LAST:event_btnAddCusActionPerformed

    private void mAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mAboutMouseClicked
        // TODO add your handling code here:
        About a = new About();
        a.setVisible(true);
    }//GEN-LAST:event_mAboutMouseClicked

    private void tbReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbReportMouseClicked

        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tbReport.getModel();
            int Myindex = tbReport.getSelectedRow();
            txtReportID.setText(model.getValueAt(Myindex, 0).toString());
            String dateR = model.getValueAt(Myindex, 1).toString();
            String[] parts = dateR.split(" ");
            String parts1 = parts[0];
            String parts2 = parts[1];
            String[] part = parts2.split(":");
            String part1 = part[0];
            String part2 = part[1];
            String part3 = part[2];
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(parts1);
            dateReport.setDate(date);
            txtHH.setText(part1);
            txtMM.setText(part2);
            txtSS.setText(part3);
            txtEmID.setText(model.getValueAt(Myindex, 2).toString());
            txtCuID.setText(model.getValueAt(Myindex, 3).toString());
            txtRepoTotal.setText(model.getValueAt(Myindex, 4).toString());
        } catch (ParseException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tbReportMouseClicked

    private void btnClearRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearRepoActionPerformed
        // TODO add your handling code here:
        txtReportID.setText("");
        txtEmID.setText("");
        txtCuID.setText("");
        txtRepoTotal.setText("");
        jdateCurrentReport();
    }//GEN-LAST:event_btnClearRepoActionPerformed

    private void btnDeleteRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRepoActionPerformed
        // TODO add your handling code here:
        if (txtReportID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Somthing has been empty!");
        } else {
            getConnect();
            String sql = "delete from report where report_id=" + txtReportID.getText() + "";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Delete success");
            SelectRepo();
        }
        closeConnect();
        btnClearRepoActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteRepoActionPerformed
    
    private void btnUpdateRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRepoActionPerformed
        // TODO add your handling code here:
        if (txtReportID.getText().equals("") || txtEmID.getText().equals("") || txtCuID.getText().equals("") || txtRepoTotal.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Something has been empty!");
        } else {
            getConnect();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            dateR = dateReport.getDate();
            String date = df.format(dateR);
            String rp_date = date + " " + txtHH.getText() + ":" + txtMM.getText() + ":" + txtSS.getText();
            //JOptionPane.showMessageDialog(this, rp_date);
            //report_date = new java.sql.Date(dateR.getTime());
            String sql = "update report set report_date='" + rp_date + "', nv_id=" + txtEmID.getText() + ", cus_id=" + txtCuID.getText() + ", total=" + txtRepoTotal.getText() + " where report_id=" + txtReportID.getText() + " ";
            excuteUpdate_Delete(sql);
            JOptionPane.showMessageDialog(this, "Updated Success");
            SelectRepo();
        }
        closeConnect();
    }//GEN-LAST:event_btnUpdateRepoActionPerformed

    private void btnAddRepoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRepoActionPerformed
        // TODO add your handling code here:
//        if (txtReportID.getText().equals("") || txtEmID.getText().equals("") || txtCuID.getText().equals("") || txtRepoTotal.getText().equals("")) {
//            JOptionPane.showMessageDialog(this, "Something is empty!");
//        } else {
//            try {
//                String cus_name = "", cus_phone = "";
//                dateR = dateReport.getDate();
//                report_date = new java.sql.Date(dateR.getTime());
//                getConnect();
//                String sql_add = "insert into report values (?,?,?,?,?)";
//                String sql_check = "select * from customer where cus_name=?";
//                excuteAdd(sql_add);
//                excuteCheck(sql_check);
//                check.setString(1, txtCusName.getText());
//                rs = check.executeQuery();
//                if (rs.next()) {
//                    cus_name = rs.getString("cus_name");
//                    cus_phone = rs.getString("cus_phone");
//                }
//                if ((txtCusName.getText().equals(cus_name) == true) && (txtCusPhone.getText().equals(cus_phone) == true)) {
//                    JOptionPane.showMessageDialog(this, "Customer have already!");
//                } else {
//                    add.setInt(1, Integer.valueOf(txtCusID.getText()));
//                    add.setString(2, txtCusName.getText());
//                    add.setString(3, txtCusAdd.getText());
//                    add.setString(4, txtCusPhone.getText());
//                    add.setDate(5, cus_birth);
//                    int row = add.executeUpdate();
//                    JOptionPane.showMessageDialog(this, "Add successful!");
//                    SelectCus();
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//        closeConnect();
    }//GEN-LAST:event_btnAddRepoActionPerformed

    private void btnReportDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportDetailActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String mess = "";
            getConnect();
            String sql = "select report_date from report where report_id =?";
            excuteCheck(sql);
            check.setString(1, txtReportID.getText());
            rs = check.executeQuery();
            if (rs.next()) {
                mess = rs.getString("report_date");
                JOptionPane.showMessageDialog(this, mess);
            }
        } catch (SQLException ex) {
            Logger.getLogger(StartScreenAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReportDetailActionPerformed

    private void txtHHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHHKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtHH.requestFocus();
        }
    }//GEN-LAST:event_txtHHKeyTyped

    private void txtMMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMMKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtMM.requestFocus();
        }
    }//GEN-LAST:event_txtMMKeyTyped

    private void txtSSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSSKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtSS.requestFocus();
        }
    }//GEN-LAST:event_txtSSKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartScreenAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartScreenAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartScreenAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartScreenAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartScreenAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCus;
    private javax.swing.JButton btnAddEmp;
    private javax.swing.JButton btnAddManu;
    private javax.swing.JButton btnAddMed;
    private javax.swing.JButton btnAddRepo;
    private javax.swing.JButton btnClearCus;
    private javax.swing.JButton btnClearEmp;
    private javax.swing.JButton btnClearManu;
    private javax.swing.JButton btnClearMed;
    private javax.swing.JButton btnClearRepo;
    private javax.swing.JButton btnDeleteCus;
    private javax.swing.JButton btnDeleteEmp;
    private javax.swing.JButton btnDeleteManu;
    private javax.swing.JButton btnDeleteMed;
    private javax.swing.JButton btnDeleteRepo;
    private javax.swing.JMenuItem btnExit;
    private javax.swing.JButton btnReportDetail;
    private javax.swing.JMenuItem btnSignOut;
    private javax.swing.JButton btnUpdateCus;
    private javax.swing.JButton btnUpdateEmp;
    private javax.swing.JButton btnUpdateManu;
    private javax.swing.JButton btnUpdateMed;
    private javax.swing.JButton btnUpdateRepo;
    private javax.swing.JComboBox<String> cbxCompany;
    private javax.swing.JComboBox<String> cbxEmpType;
    private com.toedter.calendar.JDateChooser dateCusBirth;
    private com.toedter.calendar.JDateChooser dateEmpBirth;
    private com.toedter.calendar.JDateChooser dateExp;
    private com.toedter.calendar.JDateChooser dateFab;
    private com.toedter.calendar.JDateChooser dateReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbMedicine;
    private javax.swing.JMenu mAbout;
    private javax.swing.JMenu mSystem;
    private javax.swing.JMenuBar mbPharma;
    private javax.swing.JPanel pnlButtonCus;
    private javax.swing.JPanel pnlButtonEmp;
    private javax.swing.JPanel pnlButtonManu;
    private javax.swing.JPanel pnlButtonMed;
    private javax.swing.JPanel pnlButtonReport;
    private javax.swing.JPanel pnlCusInfo;
    private javax.swing.JPanel pnlCustomer;
    private javax.swing.JPanel pnlEmpInfo;
    private javax.swing.JPanel pnlEmployees;
    private javax.swing.JPanel pnlInforMed;
    private javax.swing.JPanel pnlManuInfo;
    private javax.swing.JPanel pnlManufactor;
    private javax.swing.JPanel pnlMedicine;
    private javax.swing.JPanel pnlReport;
    private javax.swing.JPanel pnlReportInfo;
    private javax.swing.JTabbedPane tbAdmin;
    private javax.swing.JTable tbCus;
    private javax.swing.JTable tbEmp;
    private javax.swing.JTable tbManu;
    private javax.swing.JTable tbMedi;
    private javax.swing.JTable tbReport;
    private com.sun.activation.viewers.TextEditor textEditor1;
    private javax.swing.JTextField txtCuID;
    private javax.swing.JTextField txtCusAdd;
    private javax.swing.JTextField txtCusID;
    private javax.swing.JTextField txtCusName;
    private javax.swing.JTextField txtCusPhone;
    private javax.swing.JTextField txtEmID;
    private javax.swing.JTextField txtEmpAdd;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtEmpPhone;
    private javax.swing.JTextField txtEmpPwd;
    private javax.swing.JTextField txtEmpUsername;
    private javax.swing.JTextField txtHH;
    private javax.swing.JTextField txtMM;
    private javax.swing.JTextField txtManuAdd;
    private javax.swing.JTextField txtManuExp;
    private javax.swing.JTextField txtManuID;
    private javax.swing.JTextField txtManuName;
    private javax.swing.JTextField txtManuPhone;
    private javax.swing.JTextField txtMedAmount;
    private javax.swing.JTextField txtMedExists;
    private javax.swing.JTextField txtMedID;
    private javax.swing.JTextField txtMedName;
    private javax.swing.JTextField txtMedUnit;
    private javax.swing.JTextField txtRepoTotal;
    private javax.swing.JTextField txtReportID;
    private javax.swing.JTextField txtSS;
    // End of variables declaration//GEN-END:variables
}
