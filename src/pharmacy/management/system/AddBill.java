/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy.management.system;

import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;
import java.sql.Timestamp;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import static pharmacy.management.system.DBProvider.add;
import static pharmacy.management.system.DBProvider.check;
import static pharmacy.management.system.DBProvider.closeConnect;
import static pharmacy.management.system.DBProvider.conn;
import static pharmacy.management.system.DBProvider.excuteAdd;
import static pharmacy.management.system.DBProvider.excuteCheck;
import static pharmacy.management.system.DBProvider.excuteGet;
import static pharmacy.management.system.DBProvider.excuteSQL;
import static pharmacy.management.system.DBProvider.get;
import static pharmacy.management.system.DBProvider.getConnect;
import static pharmacy.management.system.DBProvider.insertID;
import static pharmacy.management.system.DBProvider.rs;
import static pharmacy.management.system.Signin.txtUsername;
import static pharmacy.management.system.DBProvider.rs2;
import static pharmacy.management.system.InputCus.input_cus_phone;
import static pharmacy.management.system.DBProvider.dataTable;
import static pharmacy.management.system.DBProvider.excuteGet;
import static pharmacy.management.system.DBProvider.excuteUpdate_Delete;
import static pharmacy.management.system.DBProvider.get;
import static pharmacy.management.system.DBProvider.getConnect;
import static pharmacy.management.system.DBProvider.password_db;
import static pharmacy.management.system.DBProvider.rs;
import static pharmacy.management.system.DBProvider.url;
import static pharmacy.management.system.DBProvider.username_db;
import static pharmacy.management.system.InputCus.input_cus_name;

/**
 *
 * @author HOANG
 */
public class AddBill extends javax.swing.JFrame {

    String username = txtUsername.getText();
    private long now = System.currentTimeMillis();
    private Timestamp sqlTimestamp = new Timestamp(now);
    //String timeStamp = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime());

    //String titlebill ="              *********             " +"\n"+"\n"+"\t    PHARMACY BILL"+"\n\n"+"  Medicine Name              Amount\n"+"===================================\n";
    /**
     * Creates new form AddReport
     */
    public AddBill() throws SQLException {
        initComponents();
        jdateCurrentBill();
        dateBill.disable();
        txtBillID.disable();
        txtEmID.disable();
        addIdtoBill();
        setEmpID();
        txtCuPhone.disable();
        txtCuPhone.setText(input_cus_phone);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        pnlReportInfo = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        txtBillID = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtEmID = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtCuPhone = new javax.swing.JTextField();
        btnAddBill = new javax.swing.JButton();
        btnCancelBill = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMedName = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnPrintBill = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBill_detail = new javax.swing.JTable();
        dateBill = new com.toedter.calendar.JDateChooser();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Adding Bill");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        pnlReportInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel31.setText("Bill ID:");

        jLabel32.setText("Date:");

        jLabel33.setText("Empployee ID:");

        jLabel34.setText("Customer Phone:");

        btnAddBill.setText("Add Medicine");
        btnAddBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBillActionPerformed(evt);
            }
        });

        btnCancelBill.setText("Cancel");
        btnCancelBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelBillActionPerformed(evt);
            }
        });

        jLabel1.setText("Medicine name:");

        txtMedName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedNameActionPerformed(evt);
            }
        });

        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });

        jLabel2.setText("Amount:");

        jPanel2.setBackground(new java.awt.Color(0, 153, 102));
        jPanel2.setForeground(new java.awt.Color(0, 153, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
        );

        btnPrintBill.setText("Print");
        btnPrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintBillActionPerformed(evt);
            }
        });

        tbBill_detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MedicineName", "Amount"
            }
        ));
        jScrollPane1.setViewportView(tbBill_detail);

        dateBill.setDateFormatString("yyyy-MM-dd HH:mm:ss");

        javax.swing.GroupLayout pnlReportInfoLayout = new javax.swing.GroupLayout(pnlReportInfo);
        pnlReportInfo.setLayout(pnlReportInfoLayout);
        pnlReportInfoLayout.setHorizontalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReportInfoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(43, 43, 43)
                                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBillID)
                                    .addComponent(dateBill, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtMedName, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(txtCuPhone, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmID)
                                    .addComponent(txtAmount)))))
                    .addGroup(pnlReportInfoLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnAddBill)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrintBill)
                        .addGap(10, 10, 10)
                        .addComponent(btnCancelBill)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlReportInfoLayout.setVerticalGroup(
            pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReportInfoLayout.createSequentialGroup()
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(dateBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(txtEmID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(txtCuPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMedName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(57, 57, 57)
                        .addGroup(pnlReportInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddBill)
                            .addComponent(btnCancelBill)
                            .addComponent(btnPrintBill)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlReportInfoLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlReportInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlReportInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private String cus_id;
    private String emp_id;

    public void getCusID() throws SQLException {
        getConnect();
        String sql = "select CustomerID from customer where CustomerPhone=?";
        excuteCheck(sql);
        check.setString(1, input_cus_phone);
        rs = check.executeQuery();
        if (rs.next()) {
            cus_id = rs.getString("CustomerID");
        }
    }

    public void getEmpID() throws SQLException {
        getConnect();
        String sql = "select EmployeesID from employees where Username=?";
        excuteCheck(sql);
        check.setString(1, username);
        rs = check.executeQuery();
        if (rs.next()) {
            emp_id = rs.getString("EmployeesID");
        }
    }

    public void addIdtoBill() throws SQLException {
        getConnect();
        String sql = "SELECT BillID FROM bill ORDER BY BillID DESC LIMIT 1";
        String colname = "BillID";
        String type = "BIL";
        String bill_id = insertID(type, sql, colname);
        txtBillID.setText(bill_id);
        getCusID();
        getEmpID();
        String sql_add = "insert into bill values (?,?,?,?,?)";
        excuteAdd(sql_add);
        add.setString(1, bill_id);
        add.setTimestamp(2, sqlTimestamp);
        add.setString(3, emp_id);
        add.setString(4, cus_id);
        add.setDouble(5, 0);
        int row = add.executeUpdate();
        closeConnect();
    }

    public void setEmpID() throws SQLException {
        getConnect();
        String sql = "select EmployeesID from employees where Username=?";
        excuteCheck(sql);
        check.setString(1, username);
        rs = check.executeQuery();
        if (rs.next()) {
            txtEmID.setText(rs.getString("EmployeesID"));
        }
    }

    public void SelectBill() {
        String sql = "select a.MedicineName, b.Amout from medicine a, bill_detail b where a.MedicineID=b.MedicineID and b.BillID='" + txtBillID.getText() + "'";
        dataTable(sql, tbBill_detail);
    }
    
    public void jdateCurrentBill() {
        dateBill.setDate(sqlTimestamp);
    }
    private void txtMedNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedNameActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    public void updateMed() throws SQLException {
        getConnect();
        int having, update;
        String sql_check = "select MedicineInventory from medicine where MedicineName=?";
        excuteCheck(sql_check);
        check.setString(1, txtMedName.getText());
        rs = check.executeQuery();
        if (rs.next()) {
            having = rs.getInt("MedicineInventory");
            update = having - Integer.valueOf(txtAmount.getText());
            String sql = "update medicine set MedicineInventory=" + update + " where MedicineName='" + txtMedName.getText() + "'";
            excuteUpdate_Delete(sql);
        }
        closeConnect();
    }

    public void updateTotalBill() throws SQLException {
        getConnect();
        int price = 0, money = 0;
        double having = 0, update = 0;
        String sql_check = "select MedicineUnitPrice from medicine where MedicineName=?";
        excuteCheck(sql_check);
        check.setString(1, txtMedName.getText());
        rs = check.executeQuery();
        if (rs.next()) {
            price = rs.getInt("MedicineUnitPrice");
            money = price * Integer.valueOf(txtAmount.getText());
            String sql_get = "select BillTotal from bill where BillID=?";
            excuteGet(sql_get);
            get.setString(1, txtBillID.getText());
            rs2 = get.executeQuery();
            if (rs2.next()) {
                having = rs2.getDouble("BillTotal");
                update = having + money;
                String sql = "update bill set BillTotal=" + update + " where BillID='" + txtBillID.getText() + "'";
                excuteUpdate_Delete(sql);
            }
        }
        closeConnect();
    }
    private void btnAddBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBillActionPerformed
        try {
            // TODO add your handling code here:
            String med_id = "";
            getConnect();
            String sql_check = "select MedicineID from medicine where MedicineName=?";
            excuteCheck(sql_check);
            check.setString(1, txtMedName.getText());
            rs = check.executeQuery();
            if (rs.next()) {
                med_id = rs.getString("MedicineID");
                String sql_add = "insert into bill_detail values (?,?,?)";
                excuteAdd(sql_add);
                add.setString(1, txtBillID.getText());
                add.setString(2, med_id);
                add.setString(3, txtAmount.getText());
                int row = add.executeUpdate();
                updateMed();
                updateTotalBill();
                JOptionPane.showMessageDialog(this, "Add bill success");
                SelectBill();
            } else {
                JOptionPane.showMessageDialog(this, "Medicine doesn't exists");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddBill.class.getName()).log(Level.SEVERE, null, ex);
        }
        closeConnect();
        txtMedName.setText("");
        txtAmount.setText("");
    }//GEN-LAST:event_btnAddBillActionPerformed
    public void delBill() {
        getConnect();
        String sql = "delete from bill where BillID='" + txtBillID.getText() + "'";
        excuteUpdate_Delete(sql);
        closeConnect();
    }
    private void btnCancelBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelBillActionPerformed
        try {
            // TODO add your handling code here:
            String tmp = "";
            getConnect();
            delBill();
            String sql = "select EmployeesPosition from employees where Username=?";
            excuteGet(sql);
            get.setString(1, username);
            rs = get.executeQuery();
            if (rs.next()) {
                tmp = rs.getString("EmployeesPosition");
            }

            if (username.equals("admin") == true) {
                StartScreenAdmin sa = new StartScreenAdmin();
                sa.setVisible(true);
                this.dispose();
            } else {
                StartScreenUser su = new StartScreenUser();
                su.setVisible(true);
                this.dispose();
            }
            closeConnect();
        } catch (SQLException ex) {
            Logger.getLogger(AddBill.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelBillActionPerformed

    private void btnPrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintBillActionPerformed
//        try {
//            // TODO add your handling code here:
//            conn = DriverManager.getConnection(url, username_db, password_db);
//            JasperDesign jd = JRXmlLoader.load("E:\\PharmacyManagementSystem\\src\\reports\\report_bill.jrxml");
//            String sql = "select a.BillID, a.BillDate, c.CustomerName , e.MedicineName, e.MedicineUnitPrice, b.Amout, (e.MedicineUnitPrice*b.Amout) as Money, d.EmployeesID from pharmacydb.bill a, pharmacydb.bill_detail  b, pharmacydb.customer c, pharmacydb.employees d, pharmacydb.medicine e where a.BillID=b.BillID and a.CustomerID=c.CustomerID and a.EmployeesID=d.EmployeesID and b.MedicineID=e.MedicineID and a.BillID='" + txtBillID.getText() + "'";
//            JRDesignQuery query = new JRDesignQuery();
//            query.setText(sql);
//            jd.setQuery(query);
//
//            HashMap<String, Object> para = new HashMap<>();
//            para.put("BillID", txtBillID.getText());
//
//            JasperReport js = JasperCompileManager.compileReport(jd);
//            JasperPrint jp = JasperFillManager.fillReport(js, para, conn);
//            JasperViewer.viewReport(jp);
//        } catch (JRException | SQLException ex) {
//            Logger.getLogger(AddBill.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_btnPrintBillActionPerformed

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped
        // TODO add your handling code here:
        char char_input = evt.getKeyChar();
        if (!Character.isDigit(char_input) && (char_input != '\b')) {
            JOptionPane.showMessageDialog(this, "Only Positive Numbers Allowed");
            txtAmount.requestFocus();
        }
    }//GEN-LAST:event_txtAmountKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AddBill().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(AddBill.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddBill;
    private javax.swing.JButton btnCancelBill;
    private javax.swing.JButton btnPrintBill;
    private com.toedter.calendar.JDateChooser dateBill;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel pnlReportInfo;
    private javax.swing.JTable tbBill_detail;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBillID;
    private javax.swing.JTextField txtCuPhone;
    private javax.swing.JTextField txtEmID;
    private javax.swing.JTextField txtMedName;
    // End of variables declaration//GEN-END:variables
}
